import { __decorate, __param } from './external/tslib/tslib.es6.js';
import { SyncDescriptor } from 'vscode/vscode/vs/platform/instantiation/common/descriptors';
import { BrowserWorkbenchEnvironmentService } from 'vscode/vscode/vs/workbench/services/environment/browser/environmentService';
import { IEnvironmentService } from 'vscode/vscode/vs/platform/environment/common/environment';
import { IProductService } from 'vscode/vscode/vs/platform/product/common/productService';
import { logsPath, getWorkspaceIdentifier, getWorkbenchConstructionOptions } from 'vscode/workbench';

let InjectedBrowserWorkbenchEnvironmentService = class InjectedBrowserWorkbenchEnvironmentService extends BrowserWorkbenchEnvironmentService {
    constructor(workspaceId = getWorkspaceIdentifier().id, options = getWorkbenchConstructionOptions(), productService) {
        super(workspaceId, logsPath, options, productService);
    }
};
InjectedBrowserWorkbenchEnvironmentService = __decorate([
    ( __param(2, IProductService))
], InjectedBrowserWorkbenchEnvironmentService);
function getServiceOverride(options) {
    return {
        [( IEnvironmentService.toString())]: new SyncDescriptor(InjectedBrowserWorkbenchEnvironmentService, [undefined, options], true)
    };
}

export { getServiceOverride as default };
