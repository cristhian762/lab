import { isWeb, isMacintosh, isLinux, isWindows, isIOS, isMobile } from '../../../base/common/platform.js';
import { localizeWithPath } from '../../../nls.js';
import { RawContextKey } from './contextkey.js';
const IsMacContext = ( new RawContextKey('isMac', isMacintosh, ( localizeWithPath(
 'vs/platform/contextkey/common/contextkeys',
 'isMac',
 "Whether the operating system is macOS"
))));
const IsLinuxContext = ( new RawContextKey('isLinux', isLinux, ( localizeWithPath(
 'vs/platform/contextkey/common/contextkeys',
 'isLinux',
 "Whether the operating system is Linux"
))));
const IsWindowsContext = ( new RawContextKey('isWindows', isWindows, ( localizeWithPath(
 'vs/platform/contextkey/common/contextkeys',
 'isWindows',
 "Whether the operating system is Windows"
))));
const IsWebContext = ( new RawContextKey('isWeb', isWeb, ( localizeWithPath(
 'vs/platform/contextkey/common/contextkeys',
 'isWeb',
 "Whether the platform is a web browser"
))));
const IsMacNativeContext = ( new RawContextKey('isMacNative', isMacintosh && !isWeb, ( localizeWithPath(
 'vs/platform/contextkey/common/contextkeys',
 'isMacNative',
 "Whether the operating system is macOS on a non-browser platform"
))));
const IsIOSContext = ( new RawContextKey('isIOS', isIOS, ( localizeWithPath(
 'vs/platform/contextkey/common/contextkeys',
 'isIOS',
 "Whether the operating system is iOS"
))));
const IsMobileContext = ( new RawContextKey('isMobile', isMobile, ( localizeWithPath(
 'vs/platform/contextkey/common/contextkeys',
 'isMobile',
 "Whether the platform is a mobile web browser"
))));
const IsDevelopmentContext = ( new RawContextKey('isDevelopment', false, true));
const ProductQualityContext = ( new RawContextKey('productQualityType', '', ( localizeWithPath(
 'vs/platform/contextkey/common/contextkeys',
 'productQualityType',
 "Quality type of VS Code"
))));
const InputFocusedContextKey = 'inputFocus';
const InputFocusedContext = ( new RawContextKey(InputFocusedContextKey, false, ( localizeWithPath(
 'vs/platform/contextkey/common/contextkeys',
 'inputFocus',
 "Whether keyboard focus is inside an input box"
))));
export { InputFocusedContext, InputFocusedContextKey, IsDevelopmentContext, IsIOSContext, IsLinuxContext, IsMacContext, IsMacNativeContext, IsMobileContext, IsWebContext, IsWindowsContext, ProductQualityContext };
