import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';
import { MenuId, IMenuService } from '../../../../platform/actions/common/actions.js';
import { createAndFillInContextMenuActions } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';
let CommentMenus = class CommentMenus {
    constructor(menuService) {
        this.menuService = menuService;
    }
    getCommentThreadTitleActions(contextKeyService) {
        return this.getMenu(MenuId.CommentThreadTitle, contextKeyService);
    }
    getCommentThreadActions(contextKeyService) {
        return this.getMenu(MenuId.CommentThreadActions, contextKeyService);
    }
    getCommentEditorActions(contextKeyService) {
        return this.getMenu(MenuId.CommentEditorActions, contextKeyService);
    }
    getCommentThreadAdditionalActions(contextKeyService) {
        return this.getMenu(MenuId.CommentThreadAdditionalActions, contextKeyService);
    }
    getCommentTitleActions(comment, contextKeyService) {
        return this.getMenu(MenuId.CommentTitle, contextKeyService);
    }
    getCommentActions(comment, contextKeyService) {
        return this.getMenu(MenuId.CommentActions, contextKeyService);
    }
    getCommentThreadTitleContextActions(contextKeyService) {
        return this.getMenu(MenuId.CommentThreadTitleContext, contextKeyService);
    }
    getMenu(menuId, contextKeyService) {
        const menu = this.menuService.createMenu(menuId, contextKeyService);
        const primary = [];
        const secondary = [];
        const result = { primary, secondary };
        createAndFillInContextMenuActions(menu, { shouldForwardArgs: true }, result, 'inline');
        return menu;
    }
    dispose() {
    }
};
CommentMenus = ( __decorate([
    ( __param(0, IMenuService))
], CommentMenus));
export { CommentMenus };
