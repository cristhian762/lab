import { localize2WithPath, localizeWithPath } from '../../../../nls.js';
import { registerAction2, Action2, MenuId } from '../../../../platform/actions/common/actions.js';
import { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';
import { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';
import { Categories } from '../../../../platform/action/common/actionCommonCategories.js';
class ToggleRenderWhitespaceAction extends Action2 {
    static { this.ID = 'editor.action.toggleRenderWhitespace'; }
    constructor() {
        super({
            id: ToggleRenderWhitespaceAction.ID,
            title: {
                ...( localize2WithPath(
                    'vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace',
                    'toggleRenderWhitespace',
                    "Toggle Render Whitespace"
                )),
                mnemonicTitle: ( localizeWithPath(
                    'vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace',
                    { key: 'miToggleRenderWhitespace', comment: ['&& denotes a mnemonic'] },
                    "&&Render Whitespace"
                )),
            },
            category: Categories.View,
            f1: true,
            toggled: ( ContextKeyExpr.notEquals('config.editor.renderWhitespace', 'none')),
            menu: {
                id: MenuId.MenubarAppearanceMenu,
                group: '4_editor',
                order: 4
            }
        });
    }
    run(accessor) {
        const configurationService = accessor.get(IConfigurationService);
        const renderWhitespace = configurationService.getValue('editor.renderWhitespace');
        let newRenderWhitespace;
        if (renderWhitespace === 'none') {
            newRenderWhitespace = 'all';
        }
        else {
            newRenderWhitespace = 'none';
        }
        return configurationService.updateValue('editor.renderWhitespace', newRenderWhitespace);
    }
}
registerAction2(ToggleRenderWhitespaceAction);
