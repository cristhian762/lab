import { localizeWithPath } from '../../../../nls.js';
import { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';
const ctxIsMergeEditor = ( new RawContextKey('isMergeEditor', false, { type: 'boolean', description: ( localizeWithPath(
 'vs/workbench/contrib/mergeEditor/common/mergeEditor',
 'is',
 'The editor is a merge editor'
)) }));
const ctxIsMergeResultEditor = ( new RawContextKey(
 'isMergeResultEditor',
 false,
 { type: 'boolean', description: ( localizeWithPath(
  'vs/workbench/contrib/mergeEditor/common/mergeEditor',
  'isr',
  'The editor is a the result editor of a merge editor.'
 )) }
));
const ctxMergeEditorLayout = ( new RawContextKey(
 'mergeEditorLayout',
 'mixed',
 { type: 'string', description: ( localizeWithPath(
  'vs/workbench/contrib/mergeEditor/common/mergeEditor',
  'editorLayout',
  'The layout mode of a merge editor'
 )) }
));
const ctxMergeEditorShowBase = ( new RawContextKey(
 'mergeEditorShowBase',
 false,
 { type: 'boolean', description: ( localizeWithPath(
  'vs/workbench/contrib/mergeEditor/common/mergeEditor',
  'showBase',
  'If the merge editor shows the base version'
 )) }
));
const ctxMergeEditorShowBaseAtTop = ( new RawContextKey(
 'mergeEditorShowBaseAtTop',
 false,
 { type: 'boolean', description: ( localizeWithPath(
  'vs/workbench/contrib/mergeEditor/common/mergeEditor',
  'showBaseAtTop',
  'If base should be shown at the top'
 )) }
));
const ctxMergeEditorShowNonConflictingChanges = ( new RawContextKey(
 'mergeEditorShowNonConflictingChanges',
 false,
 { type: 'boolean', description: ( localizeWithPath(
  'vs/workbench/contrib/mergeEditor/common/mergeEditor',
  'showNonConflictingChanges',
  'If the merge editor shows non-conflicting changes'
 )) }
));
const ctxMergeBaseUri = ( new RawContextKey('mergeEditorBaseUri', '', { type: 'string', description: ( localizeWithPath(
 'vs/workbench/contrib/mergeEditor/common/mergeEditor',
 'baseUri',
 'The uri of the baser of a merge editor'
)) }));
const ctxMergeResultUri = ( new RawContextKey('mergeEditorResultUri', '', { type: 'string', description: ( localizeWithPath(
 'vs/workbench/contrib/mergeEditor/common/mergeEditor',
 'resultUri',
 'The uri of the result of a merge editor'
)) }));
const StorageCloseWithConflicts = 'mergeEditorCloseWithConflicts';
export { StorageCloseWithConflicts, ctxIsMergeEditor, ctxIsMergeResultEditor, ctxMergeBaseUri, ctxMergeEditorLayout, ctxMergeEditorShowBase, ctxMergeEditorShowBaseAtTop, ctxMergeEditorShowNonConflictingChanges, ctxMergeResultUri };
