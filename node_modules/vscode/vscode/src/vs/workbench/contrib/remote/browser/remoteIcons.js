import { localizeWithPath } from '../../../../nls.js';
import { Codicon } from '../../../../base/common/codicons.js';
import { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';
const getStartedIcon = registerIcon('remote-explorer-get-started', Codicon.star, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'getStartedIcon',
 'Getting started icon in the remote explorer view.'
)));
const documentationIcon = registerIcon('remote-explorer-documentation', Codicon.book, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'documentationIcon',
 'Documentation icon in the remote explorer view.'
)));
registerIcon('remote-explorer-feedback', Codicon.twitter, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'feedbackIcon',
 'Feedback icon in the remote explorer view.'
)));
const reviewIssuesIcon = registerIcon('remote-explorer-review-issues', Codicon.issues, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'reviewIssuesIcon',
 'Review issue icon in the remote explorer view.'
)));
const reportIssuesIcon = registerIcon('remote-explorer-report-issues', Codicon.comment, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'reportIssuesIcon',
 'Report issue icon in the remote explorer view.'
)));
const remoteExplorerViewIcon = registerIcon('remote-explorer-view-icon', Codicon.remoteExplorer, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'remoteExplorerViewIcon',
 'View icon of the remote explorer view.'
)));
const portsViewIcon = registerIcon('ports-view-icon', Codicon.plug, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'portsViewIcon',
 'View icon of the remote ports view.'
)));
registerIcon('ports-view-icon', Codicon.plug, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'portIcon',
 'Icon representing a remote port.'
)));
const privatePortIcon = registerIcon('private-ports-view-icon', Codicon.lock, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'privatePortIcon',
 'Icon representing a private remote port.'
)));
const forwardPortIcon = registerIcon('ports-forward-icon', Codicon.plus, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'forwardPortIcon',
 'Icon for the forward action.'
)));
const stopForwardIcon = registerIcon('ports-stop-forward-icon', Codicon.x, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'stopForwardIcon',
 'Icon for the stop forwarding action.'
)));
const openBrowserIcon = registerIcon('ports-open-browser-icon', Codicon.globe, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'openBrowserIcon',
 'Icon for the open browser action.'
)));
const openPreviewIcon = registerIcon('ports-open-preview-icon', Codicon.openPreview, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'openPreviewIcon',
 'Icon for the open preview action.'
)));
const copyAddressIcon = registerIcon('ports-copy-address-icon', Codicon.clippy, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'copyAddressIcon',
 'Icon for the copy local address action.'
)));
const labelPortIcon = registerIcon('ports-label-icon', Codicon.tag, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'labelPortIcon',
 'Icon for the label port action.'
)));
const forwardedPortWithoutProcessIcon = registerIcon('ports-forwarded-without-process-icon', Codicon.circleOutline, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'forwardedPortWithoutProcessIcon',
 'Icon for forwarded ports that don\'t have a running process.'
)));
const forwardedPortWithProcessIcon = registerIcon('ports-forwarded-with-process-icon', Codicon.circleFilled, ( localizeWithPath(
 'vs/workbench/contrib/remote/browser/remoteIcons',
 'forwardedPortWithProcessIcon',
 'Icon for forwarded ports that do have a running process.'
)));
export { copyAddressIcon, documentationIcon, forwardPortIcon, forwardedPortWithProcessIcon, forwardedPortWithoutProcessIcon, getStartedIcon, labelPortIcon, openBrowserIcon, openPreviewIcon, portsViewIcon, privatePortIcon, remoteExplorerViewIcon, reportIssuesIcon, reviewIssuesIcon, stopForwardIcon };
