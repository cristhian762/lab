import { registerEditorAction, EditorAction } from '../../../browser/editorExtensions.js';
import { EditorZoom } from '../../../common/config/editorZoom.js';
import { localizeWithPath } from '../../../../nls.js';
class EditorFontZoomIn extends EditorAction {
    constructor() {
        super({
            id: 'editor.action.fontZoomIn',
            label: ( localizeWithPath(
                'vs/editor/contrib/fontZoom/browser/fontZoom',
                'EditorFontZoomIn.label',
                "Increase Editor Font Size"
            )),
            alias: 'Increase Editor Font Size',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() + 1);
    }
}
class EditorFontZoomOut extends EditorAction {
    constructor() {
        super({
            id: 'editor.action.fontZoomOut',
            label: ( localizeWithPath(
                'vs/editor/contrib/fontZoom/browser/fontZoom',
                'EditorFontZoomOut.label',
                "Decrease Editor Font Size"
            )),
            alias: 'Decrease Editor Font Size',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() - 1);
    }
}
class EditorFontZoomReset extends EditorAction {
    constructor() {
        super({
            id: 'editor.action.fontZoomReset',
            label: ( localizeWithPath(
                'vs/editor/contrib/fontZoom/browser/fontZoom',
                'EditorFontZoomReset.label',
                "Reset Editor Font Size"
            )),
            alias: 'Reset Editor Font Size',
            precondition: undefined
        });
    }
    run(accessor, editor) {
        EditorZoom.setZoomLevel(0);
    }
}
registerEditorAction(EditorFontZoomIn);
registerEditorAction(EditorFontZoomOut);
registerEditorAction(EditorFontZoomReset);
